theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Location
rain.data %>% ggplot(aes(x=Location)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Location of Station") +
labs(x="Location", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Wind gust direction
rain.data %>% ggplot(aes(x=WindGustDir)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Direction of Wind Gust") +
labs(x="Direction", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Wind direction 9am
rain.data %>% ggplot(aes(x=WindDir9am)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Direction of Wind 9am") +
labs(x="Direction", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Wind direction 9am
rain.data %>% ggplot(aes(x=WindDir3pm)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Direction of Wind 3pm") +
labs(x="Direction", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Cloud cover 9am
rain.data %>% ggplot(aes(x=Cloud9am)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Cloud Cover 9am") +
labs(x="Level of Cover", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Cloud cover 3pm
rain.data %>% ggplot(aes(x=Cloud3pm)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Cloud Cover 3pm") +
labs(x="Level of Cover", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Month of Observation
rain.data %>% ggplot(aes(x=Month)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Month of Observation") +
labs(x="Month", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Change rainfall to a factor
rain.data$Rainfall <- cut(rain.data$Rainfall, breaks = c(-1, 0, 10, 50, 100, Inf),
labels = c("None", "Light", "Moderate", "Heavy", "Significant"))
summary(rain.data$Rainfall)
# Delete NA values for Rainfall
rain.data <- rain.data[!is.na(rain.data$Rainfall), ]
view(rain.data)
# Change rainfall to a factor
rain.data$Rainfall <- cut(rain.data$Rainfall, breaks = c(-1, 0, 10, 50, 100, Inf),
labels = c("None", "Light", "Moderate", "Heavy", "Significant"))
# Load map packages
library(ggmap)
library(curl)
library(httr)
library(RColorBrewer)
library(rgdal)
library(ggplot2)
library(viridis)
library(leaflet)
library(htmltools)
library(mapproj)
library(geofacet)
library(maps)
library(grid)
library(gridExtra)
# API code
ggmap::register_google(key = "AIzaSyB52dB_6Hdu1KOWK1dbMwq3aejopZbahd0")
# Get location information
geocode('AliceSprings Australia',output = 'more')
geocode('Brisbane Australia',output = 'more')
geocode('Cairns Australia',output = 'more')
geocode('Canberra Australia',output = 'more')
geocode('Cobar Australia',output = 'more')
geocode('CoffsHarbour Australia',output = 'more')
geocode('Darwin Australia',output = 'more')
geocode('Hobart Australia',output = 'more')
geocode('Melbourne Australia',output = 'more')
geocode('MelbourneAirport Australia',output = 'more')
geocode('Mildura Australia',output = 'more')
geocode('Moree Australia',output = 'more')
geocode('MountGambier Australia',output = 'more')
geocode('NorfolkIsland Australia',output = 'more')
geocode('Nuriootpa Australia',output = 'more')
geocode('Perth Australia',output = 'more')
geocode('PerthAirport Australia',output = 'more')
geocode('Portland Australia',output = 'more')
geocode('Sale Australia',output = 'more')
geocode('Sydney Australia',output = 'more')
geocode('SydneyAirport Australia',output = 'more')
geocode('Townsville Australia',output = 'more')
geocode('WaggaWagga Australia',output = 'more')
geocode('Watsonia Australia',output = 'more')
geocode('Williamtown Australia',output = 'more')
geocode('Woomera Australia',output = 'more')
# Create a new data frame with this new information
Location <- c("AliceSprings","Brisbane","Cairns","Canberra","Cobar",
"CoffsHarbour","Darwin","Hobart","Melbourne","MelbourneAirport",
"Mildura","Moree","MountGambier","NorfolkIsland","Nuriootpa","Perth",
"PerthAirport","Portland",  "Sale","Sydney","SydneyAirport","Townsville","WaggaWagga","Watsonia",   "Williamtown","Woomera")
Lon <- c(134,153,146,149,146,153,131,147,145,145,142,150,141,168,139,116,116,142,147,151,151,147,147,145,152,137)
Lat <- c(-23.7,-27.5,-16.9,-35.3,-31.5,-30.3,-12.5,-42.9,-37.8,-37.7,-34.2,-29.5,-37.8,-29.0,-34.5,-32.0,-31.9,-38.4,-38.1,-33.9,-34.0,-19.3,-35.1,-37.7,-32.8,-31.2)
# Create a data frame with this new information
Location.data <- data.frame(Location,Lon,Lat)
head(Location.data)
# Left join the new data frame with the existing rain data
new.rain.data <- rain.data %>% left_join(Location.data, by="Location")
head(new.rain.data)
# Load, crop, and label the map
lats<-c(-40,-10)
lons<-c(112,155)
# Create the map of Australia
Aus_layer <- get_map(location = "Australia", zoom = 4, source = "google", maptype = "terrain")
Aus_Map <- ggmap(Aus_layer) + xlim(lons) + ylim(lats) + theme_bw() + labs(x="Longitude",y="Latitude")
Aus_Map
# New data frame
rainfall_data <- new.rain.data %>%
select(Rainfall,Lon,Lat)
# New data frame
rainfall_data <- new.rain.data %>%
dplyr::select(Rainfall,Lon,Lat)
head(rainfall_data)
Aus_Map +
stat_density2d(aes(x = Lon, y = Lat, fill = ..level.., alpha = ..level..),size = 2, bins = 4,data = rainfall_data,geom = "polygon") +
ggtitle("Level of Rainfall") +
labs(x="Longitude", y="Latitude") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
axis.ticks=element_blank())
stat_density2d(aes(x = Lon, y = Lat, fill = ..level.., alpha = ..level..),size = 2, bins = 4,data = rainfall_data,geom = "polygon") +
ggtitle("Level of Rainfall") +
labs(x="Longitude", y="Latitude") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
axis.ticks=element_blank())
# New data frame
rainfall_data <- new.rain.data %>%
dplyr::select(Rainfall,Lon,Lat)
head(rainfall_data)
Aus_Map +
stat_density2d(aes(x = Lon, y = Lat, fill = ..level.., alpha = ..level..),size = 2, bins = 4,data = rainfall_data,geom = "polygon") +
ggtitle("Level of Rainfall") +
labs(x="Longitude", y="Latitude") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
axis.ticks=element_blank())
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(GGally)
library(tidyverse)
library(lubridate)
rm(list=ls())
rain.data <- read.csv("Australian Rain Fall.csv") #https://www.kaggle.com/jsphyg/weather-dataset-rattle-package
dim(rain.data)
str(rain.data)
summary(rain.data[,-c(1,2,8,10,11,22,23)]) #summary of numeric variables
sort(colSums(is.na(rain.data)), decreasing = TRUE)   #Finds how many values each variable is missing
rain.data$Date <- as.Date(rain.data$Date , "%Y-%m-%d")
rain.data$Month <- as.factor(month(rain.data$Date)) #finding all the values for month and factoring them.
rain.data$Month <- as.factor(rain.data$Month)
rain.data <- rain.data[!is.na(rain.data$Month), ]# Delete NA Values
rain.data$Month <- factor(rain.data$Month,       # convert to factor
levels = c( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), # with these levels
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) # call them this
rain.data <- rain.data[!is.na(rain.data$Cloud9am), ] # Delete NA values for Cloud9am
rain.data$Cloud9am <- as.factor(rain.data$Cloud9am)
rain.data$Cloud9am <- factor(rain.data$Cloud9am,       # convert to factor
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8), # with these levels
labels = c("Clear Sky", "1/8 Overcast", "2/8 Overcast", "3/8 Overcast", "4/8 Overcast", "5/8 Overcast", "6/8 Overcast", "7/8 Overcast", "Completely Overcast")) # call them this
rain.data <- rain.data[!is.na(rain.data$Cloud3pm), ] #Delete NA values for Cloud3pm
rain.data$Cloud3pm <- as.factor(rain.data$Cloud3pm)
rain.data$Cloud3pm <- factor(rain.data$Cloud3pm,       # convert to factor
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8), # with these levels
labels = c("Clear Sky", "1/8 Overcast", "2/8 Overcast", "3/8 Overcast", "4/8 Overcast", "5/8 Overcast", "6/8 Overcast", "7/8 Overcast", "Completely Overcast")) # call them this
rain.data <- rain.data[complete.cases(rain.data), ]
# Delete unwanted columns. We don't need date or the rain today/tomorrow functions.
rain.data <- rain.data[, -c(1,22,23)]
dim(rain.data)
sort(colSums(is.na(rain.data)), decreasing = TRUE)
# Location
rain.data %>% ggplot(aes(x=Location)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Location of Station") +
labs(x="Location", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Wind gust direction
rain.data %>% ggplot(aes(x=WindGustDir)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Direction of Wind Gust") +
labs(x="Direction", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Wind direction 9am
rain.data %>% ggplot(aes(x=WindDir9am)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Direction of Wind 9am") +
labs(x="Direction", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Wind direction 9am
rain.data %>% ggplot(aes(x=WindDir3pm)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Direction of Wind 3pm") +
labs(x="Direction", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Cloud cover 9am
rain.data %>% ggplot(aes(x=Cloud9am)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Cloud Cover 9am") +
labs(x="Level of Cover", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Cloud cover 3pm
rain.data %>% ggplot(aes(x=Cloud3pm)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Cloud Cover 3pm") +
labs(x="Level of Cover", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Month of Observation
rain.data %>% ggplot(aes(x=Month)) +
geom_bar(color="#00d100", fill="#24ff24",alpha=0.95, width=0.90) +
ggtitle("Month of Observation") +
labs(x="Month", y="Count") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8,angle=90),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
panel.background=element_rect(fill="white"),
panel.grid.major=element_blank(),
panel.grid.minor = element_line(size = 0.50, linetype = "solid", color = "black"),
axis.ticks=element_blank())
# Change rainfall to a factor
rain.data$Rainfall <- cut(rain.data$Rainfall, breaks = c(-1, 0, 10, 50, 100, Inf),
labels = c("None", "Light", "Moderate", "Heavy", "Significant"))
summary(rain.data$Rainfall)
# Delete NA values for Rainfall
rain.data <- rain.data[!is.na(rain.data$Rainfall), ]
head(rain.data)
# Load map packages
library(ggmap)
library(curl)
library(httr)
library(RColorBrewer)
library(rgdal)
library(ggplot2)
library(viridis)
library(leaflet)
library(htmltools)
library(mapproj)
library(geofacet)
library(maps)
library(grid)
library(gridExtra)
# API code
ggmap::register_google(key = "AIzaSyB52dB_6Hdu1KOWK1dbMwq3aejopZbahd0")
# Get location information
geocode('AliceSprings Australia',output = 'more')
geocode('Brisbane Australia',output = 'more')
geocode('Cairns Australia',output = 'more')
geocode('Canberra Australia',output = 'more')
geocode('Cobar Australia',output = 'more')
geocode('CoffsHarbour Australia',output = 'more')
geocode('Darwin Australia',output = 'more')
geocode('Hobart Australia',output = 'more')
geocode('Melbourne Australia',output = 'more')
geocode('MelbourneAirport Australia',output = 'more')
geocode('Mildura Australia',output = 'more')
geocode('Moree Australia',output = 'more')
geocode('MountGambier Australia',output = 'more')
geocode('NorfolkIsland Australia',output = 'more')
geocode('Nuriootpa Australia',output = 'more')
geocode('Perth Australia',output = 'more')
geocode('PerthAirport Australia',output = 'more')
geocode('Portland Australia',output = 'more')
geocode('Sale Australia',output = 'more')
geocode('Sydney Australia',output = 'more')
geocode('SydneyAirport Australia',output = 'more')
geocode('Townsville Australia',output = 'more')
geocode('WaggaWagga Australia',output = 'more')
geocode('Watsonia Australia',output = 'more')
geocode('Williamtown Australia',output = 'more')
geocode('Woomera Australia',output = 'more')
# Create a new data frame with this new information
Location <- c("AliceSprings","Brisbane","Cairns","Canberra","Cobar",
"CoffsHarbour","Darwin","Hobart","Melbourne","MelbourneAirport",
"Mildura","Moree","MountGambier","NorfolkIsland","Nuriootpa","Perth",
"PerthAirport","Portland",  "Sale","Sydney","SydneyAirport","Townsville","WaggaWagga","Watsonia",   "Williamtown","Woomera")
Lon <- c(134,153,146,149,146,153,131,147,145,145,142,150,141,168,139,116,116,142,147,151,151,147,147,145,152,137)
Lat <- c(-23.7,-27.5,-16.9,-35.3,-31.5,-30.3,-12.5,-42.9,-37.8,-37.7,-34.2,-29.5,-37.8,-29.0,-34.5,-32.0,-31.9,-38.4,-38.1,-33.9,-34.0,-19.3,-35.1,-37.7,-32.8,-31.2)
# Create a data frame with this new information
Location.data <- data.frame(Location,Lon,Lat)
head(Location.data)
# Left join the new data frame with the existing rain data
new.rain.data <- rain.data %>% left_join(Location.data, by="Location")
head(new.rain.data)
# Load, crop, and label the map
lats<-c(-40,-10)
lons<-c(112,155)
# Create the map of Australia
Aus_layer <- get_map(location = "Australia", zoom = 4, source = "google", maptype = "terrain")
Aus_Map <- ggmap(Aus_layer) + xlim(lons) + ylim(lats) + theme_bw() + labs(x="Longitude",y="Latitude")
Aus_Map
# New data frame
rainfall_data <- new.rain.data %>%
dplyr::select(Rainfall,Lon,Lat)
head(rainfall_data)
Aus_Map +
stat_density2d(aes(x = Lon, y = Lat, fill = ..level.., alpha = ..level..),size = 2, bins = 4,data = rainfall_data,geom = "polygon") +
ggtitle("Level of Rainfall") +
labs(x="Longitude", y="Latitude") +
theme(plot.title = element_text(family="Arial", color="black", size=14, face="bold.italic"),
axis.title.x=element_text(family="Arial", face="plain", color="black", size=14),
axis.title.y=element_text(family="Arial", face="plain", color="black", size=14),
legend.title=element_text(family="Arial", face="bold", colour="black", size=10),
axis.text.x=element_text(family="Arial", face="bold", color="black", size=8),
axis.text.y=element_text(family="Arial", face="bold", color="black", size=8),
axis.ticks=element_blank())
# Change rainfall to a factor
rain.data$Rainfall <- cut(rain.data$Rainfall, breaks = c(-1, 0, 10, 50, 100, Inf),
labels = c("None", "Light", "Moderate", "Heavy", "Significant"))
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(GGally)
library(tidyverse)
library(lubridate)
rm(list=ls())
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(GGally)
library(tidyverse)
library(lubridate)
rm(list=ls())
rain.data <- read.csv("Australian Rain Fall.csv") #https://www.kaggle.com/jsphyg/weather-dataset-rattle-package
dim(rain.data)
str(rain.data)
summary(rain.data[,-c(1,2,8,10,11,22,23)]) #summary of numeric variables
sort(colSums(is.na(rain.data)), decreasing = TRUE)   #Finds how many values each variable is missing
rain.data$Date <- as.Date(rain.data$Date , "%Y-%m-%d")
rain.data$Month <- as.factor(month(rain.data$Date)) #finding all the values for month and factoring them.
rain.data$Month <- as.factor(rain.data$Month)
rain.data <- rain.data[!is.na(rain.data$Month), ]# Delete NA Values
rain.data$Month <- factor(rain.data$Month,       # convert to factor
levels = c( 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), # with these levels
labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")) # call them this
rain.data <- rain.data[!is.na(rain.data$Cloud9am), ] # Delete NA values for Cloud9am
rain.data$Cloud9am <- as.factor(rain.data$Cloud9am)
rain.data$Cloud9am <- factor(rain.data$Cloud9am,       # convert to factor
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8), # with these levels
labels = c("Clear Sky", "1/8 Overcast", "2/8 Overcast", "3/8 Overcast", "4/8 Overcast", "5/8 Overcast", "6/8 Overcast", "7/8 Overcast", "Completely Overcast")) # call them this
rain.data <- rain.data[!is.na(rain.data$Cloud3pm), ] #Delete NA values for Cloud3pm
rain.data$Cloud3pm <- as.factor(rain.data$Cloud3pm)
rain.data$Cloud3pm <- factor(rain.data$Cloud3pm,       # convert to factor
levels = c(0, 1, 2, 3, 4, 5, 6, 7, 8), # with these levels
labels = c("Clear Sky", "1/8 Overcast", "2/8 Overcast", "3/8 Overcast", "4/8 Overcast", "5/8 Overcast", "6/8 Overcast", "7/8 Overcast", "Completely Overcast")) # call them this
rain.data <- rain.data[complete.cases(rain.data), ]
# Delete unwanted columns. We don't need date or the rain today/tomorrow functions.
rain.data <- rain.data[, -c(1,22,23)]
dim(rain.data)
sort(colSums(is.na(rain.data)), decreasing = TRUE)
# Change rainfall to a factor
rain.data$Rainfall <- cut(rain.data$Rainfall, breaks = c(-1, 0, 10, 50, 100, Inf),
labels = c("None", "Light", "Moderate", "Heavy", "Significant"))
summary(rain.data$Rainfall)
# Delete NA values for Rainfall
rain.data <- rain.data[!is.na(rain.data$Rainfall), ]
head(rain.data)
rain.data$Rainfall
